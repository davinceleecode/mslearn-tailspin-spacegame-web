trigger:
  - "*"

# 🧠 Use your self-hosted agent pool
pool:
  name: "davinceleecode-remote-agent" # <-- replace with your actual pool name

variables:
  buildConfiguration: "Release"
  wwwrootDir: "Tailspin.SpaceGame.Web/wwwroot"
  dotnetSdkVersion: "8.x"

steps:
  # 🧩 Install .NET SDK
  - task: UseDotNet@2
    displayName: "Use .NET SDK $(dotnetSdkVersion)"
    inputs:
      version: "$(dotnetSdkVersion)"

  # 🧰 Install NuGet (for Azure Artifacts compatibility)
  - task: NuGetToolInstaller@1
    displayName: "Install NuGet"

  # 🧱 Restore dependencies from Azure Artifacts feed
  - task: NuGetCommand@2
    displayName: "Restore project dependencies from Azure Artifacts"
    inputs:
      command: "restore"
      restoreSolution: "**/*.sln"
      feedsToUse: "select"
      vstsFeed: "$(System.TeamProject)/Tailspin.SpaceGame.Web.Models"

  # 🏷️ Write build info
  - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
    displayName: "Write build info"
    workingDirectory: $(wwwrootDir)

  # ⚙️ Build project
  - task: DotNetCoreCLI@2
    displayName: "Build the project - $(buildConfiguration)"
    inputs:
      command: "build"
      arguments: "--no-restore --configuration $(buildConfiguration)"
      projects: "**/*.csproj"

  # 📦 Publish project
  - task: DotNetCoreCLI@2
    displayName: "Publish the project - $(buildConfiguration)"
    inputs:
      command: "publish"
      projects: "**/*.csproj"
      publishWebProjects: false
      arguments: "--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)"
      zipAfterPublish: true

  # 🚀 Publish build artifacts
  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: drop"
    condition: succeeded()
