trigger:
  - "*"

# Use your self-hosted agent pool
pool:
  name: "davinceleecode-remote-agent"

variables:
  buildConfiguration: "Release"
  dotnetSdkVersion: "8.x"
  wwwrootDir: "Tailspin.SpaceGame.Web/wwwroot"

steps:
  # Install the .NET SDK
  - task: UseDotNet@2
    displayName: "Use .NET SDK $(dotnetSdkVersion)"
    inputs:
      version: "$(dotnetSdkVersion)"

  # Install NuGet tool (latest supported)
  - task: NuGetToolInstaller@1
    displayName: "Install NuGet"

  # Restore dependencies from Azure Artifacts (including Tailspin.SpaceGame.Web.Models)
  - task: NuGetCommand@2
    displayName: "Restore NuGet packages"
    inputs:
      command: restore
      restoreSolution: "**/*.sln"
      feedsToUse: select
      # Replace with your actual feed name in the project
      vstsFeed: "AzureDevOpsUpskilling/Tailspin.SpaceGame.Web.Models"

  # Optional: Write build info file
  - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
    displayName: "Write build info"
    workingDirectory: $(wwwrootDir)

  # Build .NET project
  - task: DotNetCoreCLI@2
    displayName: "Build the project - $(buildConfiguration)"
    inputs:
      command: build
      projects: "**/*.csproj"
      arguments: "--no-restore --configuration $(buildConfiguration)"

  # Publish .NET project
  - task: DotNetCoreCLI@2
    displayName: "Publish the project - $(buildConfiguration)"
    inputs:
      command: publish
      projects: "**/*.csproj"
      publishWebProjects: false
      arguments: "--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)"
      zipAfterPublish: true

  # Publish artifacts
  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: drop"
    condition: succeeded()
